%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.11.2

-ifndef(usp_record_1_1).
-define(usp_record_1_1, true).

-define(usp_record_1_1_gpb_version, "4.11.2").

-ifndef('RECORD_PB_H').
-define('RECORD_PB_H', true).
-record('Record',
        {version = []           :: iodata() | undefined, % = 1
         to_id = []             :: iodata() | undefined, % = 2
         from_id = []           :: iodata() | undefined, % = 3
         payload_security = 'PLAINTEXT' :: 'PLAINTEXT' | 'TLS12' | integer() | undefined, % = 4, enum Record.PayloadSecurity
         mac_signature = <<>>   :: iodata() | undefined, % = 5
         sender_cert = <<>>     :: iodata() | undefined, % = 6
         record_type            :: {no_session_context, usp_record_1_1:'NoSessionContextRecord'()} | {session_context, usp_record_1_1:'SessionContextRecord'()} | undefined % oneof
        }).
-endif.

-ifndef('NOSESSIONCONTEXTRECORD_PB_H').
-define('NOSESSIONCONTEXTRECORD_PB_H', true).
-record('NoSessionContextRecord',
        {payload = <<>>         :: iodata() | undefined % = 2
        }).
-endif.

-ifndef('SESSIONCONTEXTRECORD_PB_H').
-define('SESSIONCONTEXTRECORD_PB_H', true).
-record('SessionContextRecord',
        {session_id = 0         :: non_neg_integer() | undefined, % = 1, 64 bits
         sequence_id = 0        :: non_neg_integer() | undefined, % = 2, 64 bits
         expected_id = 0        :: non_neg_integer() | undefined, % = 3, 64 bits
         retransmit_id = 0      :: non_neg_integer() | undefined, % = 4, 64 bits
         payload_sar_state = 'NONE' :: 'NONE' | 'BEGIN' | 'INPROCESS' | 'COMPLETE' | integer() | undefined, % = 5, enum SessionContextRecord.PayloadSARState
         payloadrec_sar_state = 'NONE' :: 'NONE' | 'BEGIN' | 'INPROCESS' | 'COMPLETE' | integer() | undefined, % = 6, enum SessionContextRecord.PayloadSARState
         payload = []           :: [iodata()] | undefined % = 7
        }).
-endif.

-ifndef('MSG_PB_H').
-define('MSG_PB_H', true).
-record('Msg',
        {header = undefined     :: usp_record_1_1:'Header'() | undefined, % = 1
         body = undefined       :: usp_record_1_1:'Body'() | undefined % = 2
        }).
-endif.

-ifndef('HEADER_PB_H').
-define('HEADER_PB_H', true).
-record('Header',
        {msg_id = []            :: iodata() | undefined, % = 1
         msg_type = 'ERROR'     :: 'ERROR' | 'GET' | 'GET_RESP' | 'NOTIFY' | 'SET' | 'SET_RESP' | 'OPERATE' | 'OPERATE_RESP' | 'ADD' | 'ADD_RESP' | 'DELETE' | 'DELETE_RESP' | 'GET_SUPPORTED_DM' | 'GET_SUPPORTED_DM_RESP' | 'GET_INSTANCES' | 'GET_INSTANCES_RESP' | 'NOTIFY_RESP' | 'GET_SUPPORTED_PROTO' | 'GET_SUPPORTED_PROTO_RESP' | integer() | undefined % = 2, enum Header.MsgType
        }).
-endif.

-ifndef('BODY_PB_H').
-define('BODY_PB_H', true).
-record('Body',
        {msg_body               :: {request, usp_record_1_1:'Request'()} | {response, usp_record_1_1:'Response'()} | {error, usp_record_1_1:'Error'()} | undefined % oneof
        }).
-endif.

-ifndef('REQUEST_PB_H').
-define('REQUEST_PB_H', true).
-record('Request',
        {req_type               :: {get, usp_record_1_1:'Get'()} | {get_supported_dm, usp_record_1_1:'GetSupportedDM'()} | {get_instances, usp_record_1_1:'GetInstances'()} | {set, usp_record_1_1:'Set'()} | {add, usp_record_1_1:'Add'()} | {delete, usp_record_1_1:'Delete'()} | {operate, usp_record_1_1:'Operate'()} | {notify, usp_record_1_1:'Notify'()} | {get_supported_protocol, usp_record_1_1:'GetSupportedProtocol'()} | undefined % oneof
        }).
-endif.

-ifndef('RESPONSE_PB_H').
-define('RESPONSE_PB_H', true).
-record('Response',
        {resp_type              :: {get_resp, usp_record_1_1:'GetResp'()} | {get_supported_dm_resp, usp_record_1_1:'GetSupportedDMResp'()} | {get_instances_resp, usp_record_1_1:'GetInstancesResp'()} | {set_resp, usp_record_1_1:'SetResp'()} | {add_resp, usp_record_1_1:'AddResp'()} | {delete_resp, usp_record_1_1:'DeleteResp'()} | {operate_resp, usp_record_1_1:'OperateResp'()} | {notify_resp, usp_record_1_1:'NotifyResp'()} | {get_supported_protocol_resp, usp_record_1_1:'GetSupportedProtocolResp'()} | undefined % oneof
        }).
-endif.

-ifndef('ERROR.PARAMERROR_PB_H').
-define('ERROR.PARAMERROR_PB_H', true).
-record('Error.ParamError',
        {param_path = []        :: iodata() | undefined, % = 1
         err_code = 0           :: non_neg_integer() | undefined, % = 2, 32 bits
         err_msg = []           :: iodata() | undefined % = 3
        }).
-endif.

-ifndef('ERROR_PB_H').
-define('ERROR_PB_H', true).
-record('Error',
        {err_code = 0           :: non_neg_integer() | undefined, % = 1, 32 bits
         err_msg = []           :: iodata() | undefined, % = 2
         param_errs = []        :: [usp_record_1_1:'Error.ParamError'()] | undefined % = 3
        }).
-endif.

-ifndef('GET_PB_H').
-define('GET_PB_H', true).
-record('Get',
        {param_paths = []       :: [iodata()] | undefined % = 1
        }).
-endif.

-ifndef('GETRESP.REQUESTEDPATHRESULT_PB_H').
-define('GETRESP.REQUESTEDPATHRESULT_PB_H', true).
-record('GetResp.RequestedPathResult',
        {requested_path = []    :: iodata() | undefined, % = 1
         err_code = 0           :: non_neg_integer() | undefined, % = 2, 32 bits
         err_msg = []           :: iodata() | undefined, % = 3
         resolved_path_results = [] :: [usp_record_1_1:'GetResp.ResolvedPathResult'()] | undefined % = 4
        }).
-endif.

-ifndef('GETRESP.RESOLVEDPATHRESULT_PB_H').
-define('GETRESP.RESOLVEDPATHRESULT_PB_H', true).
-record('GetResp.ResolvedPathResult',
        {resolved_path = []     :: iodata() | undefined, % = 1
         result_params = []     :: [{iodata(), iodata()}] | undefined % = 2
        }).
-endif.

-ifndef('GETRESP_PB_H').
-define('GETRESP_PB_H', true).
-record('GetResp',
        {req_path_results = []  :: [usp_record_1_1:'GetResp.RequestedPathResult'()] | undefined % = 1
        }).
-endif.

-ifndef('GETSUPPORTEDDM_PB_H').
-define('GETSUPPORTEDDM_PB_H', true).
-record('GetSupportedDM',
        {obj_paths = []         :: [iodata()] | undefined, % = 1
         first_level_only = false :: boolean() | 0 | 1 | undefined, % = 2
         return_commands = false :: boolean() | 0 | 1 | undefined, % = 3
         return_events = false  :: boolean() | 0 | 1 | undefined, % = 4
         return_params = false  :: boolean() | 0 | 1 | undefined % = 5
        }).
-endif.

-ifndef('GETSUPPORTEDDMRESP.REQUESTEDOBJECTRESULT_PB_H').
-define('GETSUPPORTEDDMRESP.REQUESTEDOBJECTRESULT_PB_H', true).
-record('GetSupportedDMResp.RequestedObjectResult',
        {req_obj_path = []      :: iodata() | undefined, % = 1
         err_code = 0           :: non_neg_integer() | undefined, % = 2, 32 bits
         err_msg = []           :: iodata() | undefined, % = 3
         data_model_inst_uri = [] :: iodata() | undefined, % = 4
         supported_objs = []    :: [usp_record_1_1:'GetSupportedDMResp.SupportedObjectResult'()] | undefined % = 5
        }).
-endif.

-ifndef('GETSUPPORTEDDMRESP.SUPPORTEDOBJECTRESULT_PB_H').
-define('GETSUPPORTEDDMRESP.SUPPORTEDOBJECTRESULT_PB_H', true).
-record('GetSupportedDMResp.SupportedObjectResult',
        {supported_obj_path = [] :: iodata() | undefined, % = 1
         access = 'OBJ_READ_ONLY' :: 'OBJ_READ_ONLY' | 'OBJ_ADD_DELETE' | 'OBJ_ADD_ONLY' | 'OBJ_DELETE_ONLY' | integer() | undefined, % = 2, enum GetSupportedDMResp.ObjAccessType
         is_multi_instance = false :: boolean() | 0 | 1 | undefined, % = 3
         supported_commands = [] :: [usp_record_1_1:'GetSupportedDMResp.SupportedCommandResult'()] | undefined, % = 4
         supported_events = []  :: [usp_record_1_1:'GetSupportedDMResp.SupportedEventResult'()] | undefined, % = 5
         supported_params = []  :: [usp_record_1_1:'GetSupportedDMResp.SupportedParamResult'()] | undefined % = 6
        }).
-endif.

-ifndef('GETSUPPORTEDDMRESP.SUPPORTEDPARAMRESULT_PB_H').
-define('GETSUPPORTEDDMRESP.SUPPORTEDPARAMRESULT_PB_H', true).
-record('GetSupportedDMResp.SupportedParamResult',
        {param_name = []        :: iodata() | undefined, % = 1
         access = 'PARAM_READ_ONLY' :: 'PARAM_READ_ONLY' | 'PARAM_READ_WRITE' | 'PARAM_WRITE_ONLY' | integer() | undefined % = 2, enum GetSupportedDMResp.ParamAccessType
        }).
-endif.

-ifndef('GETSUPPORTEDDMRESP.SUPPORTEDCOMMANDRESULT_PB_H').
-define('GETSUPPORTEDDMRESP.SUPPORTEDCOMMANDRESULT_PB_H', true).
-record('GetSupportedDMResp.SupportedCommandResult',
        {command_name = []      :: iodata() | undefined, % = 1
         input_arg_names = []   :: [iodata()] | undefined, % = 2
         output_arg_names = []  :: [iodata()] | undefined % = 3
        }).
-endif.

-ifndef('GETSUPPORTEDDMRESP.SUPPORTEDEVENTRESULT_PB_H').
-define('GETSUPPORTEDDMRESP.SUPPORTEDEVENTRESULT_PB_H', true).
-record('GetSupportedDMResp.SupportedEventResult',
        {event_name = []        :: iodata() | undefined, % = 1
         arg_names = []         :: [iodata()] | undefined % = 2
        }).
-endif.

-ifndef('GETSUPPORTEDDMRESP_PB_H').
-define('GETSUPPORTEDDMRESP_PB_H', true).
-record('GetSupportedDMResp',
        {req_obj_results = []   :: [usp_record_1_1:'GetSupportedDMResp.RequestedObjectResult'()] | undefined % = 1
        }).
-endif.

-ifndef('GETINSTANCES_PB_H').
-define('GETINSTANCES_PB_H', true).
-record('GetInstances',
        {obj_paths = []         :: [iodata()] | undefined, % = 1
         first_level_only = false :: boolean() | 0 | 1 | undefined % = 2
        }).
-endif.

-ifndef('GETINSTANCESRESP.REQUESTEDPATHRESULT_PB_H').
-define('GETINSTANCESRESP.REQUESTEDPATHRESULT_PB_H', true).
-record('GetInstancesResp.RequestedPathResult',
        {requested_path = []    :: iodata() | undefined, % = 1
         err_code = 0           :: non_neg_integer() | undefined, % = 2, 32 bits
         err_msg = []           :: iodata() | undefined, % = 3
         curr_insts = []        :: [usp_record_1_1:'GetInstancesResp.CurrInstance'()] | undefined % = 4
        }).
-endif.

-ifndef('GETINSTANCESRESP.CURRINSTANCE_PB_H').
-define('GETINSTANCESRESP.CURRINSTANCE_PB_H', true).
-record('GetInstancesResp.CurrInstance',
        {instantiated_obj_path = [] :: iodata() | undefined, % = 1
         unique_keys = []       :: [{iodata(), iodata()}] | undefined % = 2
        }).
-endif.

-ifndef('GETINSTANCESRESP_PB_H').
-define('GETINSTANCESRESP_PB_H', true).
-record('GetInstancesResp',
        {req_path_results = []  :: [usp_record_1_1:'GetInstancesResp.RequestedPathResult'()] | undefined % = 1
        }).
-endif.

-ifndef('GETSUPPORTEDPROTOCOL_PB_H').
-define('GETSUPPORTEDPROTOCOL_PB_H', true).
-record('GetSupportedProtocol',
        {controller_supported_protocol_versions = [] :: iodata() | undefined % = 1
        }).
-endif.

-ifndef('GETSUPPORTEDPROTOCOLRESP_PB_H').
-define('GETSUPPORTEDPROTOCOLRESP_PB_H', true).
-record('GetSupportedProtocolResp',
        {agent_supported_protocol_versions = [] :: iodata() | undefined % = 1
        }).
-endif.

-ifndef('ADD.CREATEOBJECT_PB_H').
-define('ADD.CREATEOBJECT_PB_H', true).
-record('Add.CreateObject',
        {obj_path = []          :: iodata() | undefined, % = 1
         param_settings = []    :: [usp_record_1_1:'Add.CreateParamSetting'()] | undefined % = 2
        }).
-endif.

-ifndef('ADD.CREATEPARAMSETTING_PB_H').
-define('ADD.CREATEPARAMSETTING_PB_H', true).
-record('Add.CreateParamSetting',
        {param = []             :: iodata() | undefined, % = 1
         value = []             :: iodata() | undefined, % = 2
         required = false       :: boolean() | 0 | 1 | undefined % = 3
        }).
-endif.

-ifndef('ADD_PB_H').
-define('ADD_PB_H', true).
-record('Add',
        {allow_partial = false  :: boolean() | 0 | 1 | undefined, % = 1
         create_objs = []       :: [usp_record_1_1:'Add.CreateObject'()] | undefined % = 2
        }).
-endif.

-ifndef('ADDRESP.CREATEDOBJECTRESULT_PB_H').
-define('ADDRESP.CREATEDOBJECTRESULT_PB_H', true).
-record('AddResp.CreatedObjectResult',
        {requested_path = []    :: iodata() | undefined, % = 1
         oper_status = undefined :: usp_record_1_1:'AddResp.CreatedObjectResult.OperationStatus'() | undefined % = 2
        }).
-endif.

-ifndef('ADDRESP.CREATEDOBJECTRESULT.OPERATIONSTATUS.OPERATIONFAILURE_PB_H').
-define('ADDRESP.CREATEDOBJECTRESULT.OPERATIONSTATUS.OPERATIONFAILURE_PB_H', true).
-record('AddResp.CreatedObjectResult.OperationStatus.OperationFailure',
        {err_code = 0           :: non_neg_integer() | undefined, % = 1, 32 bits
         err_msg = []           :: iodata() | undefined % = 2
        }).
-endif.

-ifndef('ADDRESP.CREATEDOBJECTRESULT.OPERATIONSTATUS.OPERATIONSUCCESS_PB_H').
-define('ADDRESP.CREATEDOBJECTRESULT.OPERATIONSTATUS.OPERATIONSUCCESS_PB_H', true).
-record('AddResp.CreatedObjectResult.OperationStatus.OperationSuccess',
        {instantiated_path = [] :: iodata() | undefined, % = 1
         param_errs = []        :: [usp_record_1_1:'AddResp.ParameterError'()] | undefined, % = 2
         unique_keys = []       :: [{iodata(), iodata()}] | undefined % = 3
        }).
-endif.

-ifndef('ADDRESP.CREATEDOBJECTRESULT.OPERATIONSTATUS_PB_H').
-define('ADDRESP.CREATEDOBJECTRESULT.OPERATIONSTATUS_PB_H', true).
-record('AddResp.CreatedObjectResult.OperationStatus',
        {oper_status            :: {oper_failure, usp_record_1_1:'AddResp.CreatedObjectResult.OperationStatus.OperationFailure'()} | {oper_success, usp_record_1_1:'AddResp.CreatedObjectResult.OperationStatus.OperationSuccess'()} | undefined % oneof
        }).
-endif.

-ifndef('ADDRESP.PARAMETERERROR_PB_H').
-define('ADDRESP.PARAMETERERROR_PB_H', true).
-record('AddResp.ParameterError',
        {param = []             :: iodata() | undefined, % = 1
         err_code = 0           :: non_neg_integer() | undefined, % = 2, 32 bits
         err_msg = []           :: iodata() | undefined % = 3
        }).
-endif.

-ifndef('ADDRESP_PB_H').
-define('ADDRESP_PB_H', true).
-record('AddResp',
        {created_obj_results = [] :: [usp_record_1_1:'AddResp.CreatedObjectResult'()] | undefined % = 1
        }).
-endif.

-ifndef('DELETE_PB_H').
-define('DELETE_PB_H', true).
-record('Delete',
        {allow_partial = false  :: boolean() | 0 | 1 | undefined, % = 1
         obj_paths = []         :: [iodata()] | undefined % = 2
        }).
-endif.

-ifndef('DELETERESP.DELETEDOBJECTRESULT_PB_H').
-define('DELETERESP.DELETEDOBJECTRESULT_PB_H', true).
-record('DeleteResp.DeletedObjectResult',
        {requested_path = []    :: iodata() | undefined, % = 1
         oper_status = undefined :: usp_record_1_1:'DeleteResp.DeletedObjectResult.OperationStatus'() | undefined % = 2
        }).
-endif.

-ifndef('DELETERESP.DELETEDOBJECTRESULT.OPERATIONSTATUS.OPERATIONFAILURE_PB_H').
-define('DELETERESP.DELETEDOBJECTRESULT.OPERATIONSTATUS.OPERATIONFAILURE_PB_H', true).
-record('DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure',
        {err_code = 0           :: non_neg_integer() | undefined, % = 1, 32 bits
         err_msg = []           :: iodata() | undefined % = 2
        }).
-endif.

-ifndef('DELETERESP.DELETEDOBJECTRESULT.OPERATIONSTATUS.OPERATIONSUCCESS_PB_H').
-define('DELETERESP.DELETEDOBJECTRESULT.OPERATIONSTATUS.OPERATIONSUCCESS_PB_H', true).
-record('DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess',
        {affected_paths = []    :: [iodata()] | undefined, % = 1
         unaffected_path_errs = [] :: [usp_record_1_1:'DeleteResp.UnaffectedPathError'()] | undefined % = 2
        }).
-endif.

-ifndef('DELETERESP.DELETEDOBJECTRESULT.OPERATIONSTATUS_PB_H').
-define('DELETERESP.DELETEDOBJECTRESULT.OPERATIONSTATUS_PB_H', true).
-record('DeleteResp.DeletedObjectResult.OperationStatus',
        {oper_status            :: {oper_failure, usp_record_1_1:'DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure'()} | {oper_success, usp_record_1_1:'DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess'()} | undefined % oneof
        }).
-endif.

-ifndef('DELETERESP.UNAFFECTEDPATHERROR_PB_H').
-define('DELETERESP.UNAFFECTEDPATHERROR_PB_H', true).
-record('DeleteResp.UnaffectedPathError',
        {unaffected_path = []   :: iodata() | undefined, % = 1
         err_code = 0           :: non_neg_integer() | undefined, % = 2, 32 bits
         err_msg = []           :: iodata() | undefined % = 3
        }).
-endif.

-ifndef('DELETERESP_PB_H').
-define('DELETERESP_PB_H', true).
-record('DeleteResp',
        {deleted_obj_results = [] :: [usp_record_1_1:'DeleteResp.DeletedObjectResult'()] | undefined % = 1
        }).
-endif.

-ifndef('SET.UPDATEOBJECT_PB_H').
-define('SET.UPDATEOBJECT_PB_H', true).
-record('Set.UpdateObject',
        {obj_path = []          :: iodata() | undefined, % = 1
         param_settings = []    :: [usp_record_1_1:'Set.UpdateParamSetting'()] | undefined % = 2
        }).
-endif.

-ifndef('SET.UPDATEPARAMSETTING_PB_H').
-define('SET.UPDATEPARAMSETTING_PB_H', true).
-record('Set.UpdateParamSetting',
        {param = []             :: iodata() | undefined, % = 1
         value = []             :: iodata() | undefined, % = 2
         required = false       :: boolean() | 0 | 1 | undefined % = 3
        }).
-endif.

-ifndef('SET_PB_H').
-define('SET_PB_H', true).
-record('Set',
        {allow_partial = false  :: boolean() | 0 | 1 | undefined, % = 1
         update_objs = []       :: [usp_record_1_1:'Set.UpdateObject'()] | undefined % = 2
        }).
-endif.

-ifndef('SETRESP.UPDATEDOBJECTRESULT_PB_H').
-define('SETRESP.UPDATEDOBJECTRESULT_PB_H', true).
-record('SetResp.UpdatedObjectResult',
        {requested_path = []    :: iodata() | undefined, % = 1
         oper_status = undefined :: usp_record_1_1:'SetResp.UpdatedObjectResult.OperationStatus'() | undefined % = 2
        }).
-endif.

-ifndef('SETRESP.UPDATEDOBJECTRESULT.OPERATIONSTATUS.OPERATIONFAILURE_PB_H').
-define('SETRESP.UPDATEDOBJECTRESULT.OPERATIONSTATUS.OPERATIONFAILURE_PB_H', true).
-record('SetResp.UpdatedObjectResult.OperationStatus.OperationFailure',
        {err_code = 0           :: non_neg_integer() | undefined, % = 1, 32 bits
         err_msg = []           :: iodata() | undefined, % = 2
         updated_inst_failures = [] :: [usp_record_1_1:'SetResp.UpdatedInstanceFailure'()] | undefined % = 3
        }).
-endif.

-ifndef('SETRESP.UPDATEDOBJECTRESULT.OPERATIONSTATUS.OPERATIONSUCCESS_PB_H').
-define('SETRESP.UPDATEDOBJECTRESULT.OPERATIONSTATUS.OPERATIONSUCCESS_PB_H', true).
-record('SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess',
        {updated_inst_results = [] :: [usp_record_1_1:'SetResp.UpdatedInstanceResult'()] | undefined % = 1
        }).
-endif.

-ifndef('SETRESP.UPDATEDOBJECTRESULT.OPERATIONSTATUS_PB_H').
-define('SETRESP.UPDATEDOBJECTRESULT.OPERATIONSTATUS_PB_H', true).
-record('SetResp.UpdatedObjectResult.OperationStatus',
        {oper_status            :: {oper_failure, usp_record_1_1:'SetResp.UpdatedObjectResult.OperationStatus.OperationFailure'()} | {oper_success, usp_record_1_1:'SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess'()} | undefined % oneof
        }).
-endif.

-ifndef('SETRESP.UPDATEDINSTANCEFAILURE_PB_H').
-define('SETRESP.UPDATEDINSTANCEFAILURE_PB_H', true).
-record('SetResp.UpdatedInstanceFailure',
        {affected_path = []     :: iodata() | undefined, % = 1
         param_errs = []        :: [usp_record_1_1:'SetResp.ParameterError'()] | undefined % = 2
        }).
-endif.

-ifndef('SETRESP.UPDATEDINSTANCERESULT_PB_H').
-define('SETRESP.UPDATEDINSTANCERESULT_PB_H', true).
-record('SetResp.UpdatedInstanceResult',
        {affected_path = []     :: iodata() | undefined, % = 1
         param_errs = []        :: [usp_record_1_1:'SetResp.ParameterError'()] | undefined, % = 2
         updated_params = []    :: [{iodata(), iodata()}] | undefined % = 3
        }).
-endif.

-ifndef('SETRESP.PARAMETERERROR_PB_H').
-define('SETRESP.PARAMETERERROR_PB_H', true).
-record('SetResp.ParameterError',
        {param = []             :: iodata() | undefined, % = 1
         err_code = 0           :: non_neg_integer() | undefined, % = 2, 32 bits
         err_msg = []           :: iodata() | undefined % = 3
        }).
-endif.

-ifndef('SETRESP_PB_H').
-define('SETRESP_PB_H', true).
-record('SetResp',
        {updated_obj_results = [] :: [usp_record_1_1:'SetResp.UpdatedObjectResult'()] | undefined % = 1
        }).
-endif.

-ifndef('OPERATE_PB_H').
-define('OPERATE_PB_H', true).
-record('Operate',
        {command = []           :: iodata() | undefined, % = 1
         command_key = []       :: iodata() | undefined, % = 2
         send_resp = false      :: boolean() | 0 | 1 | undefined, % = 3
         input_args = []        :: [{iodata(), iodata()}] | undefined % = 4
        }).
-endif.

-ifndef('OPERATERESP.OPERATIONRESULT_PB_H').
-define('OPERATERESP.OPERATIONRESULT_PB_H', true).
-record('OperateResp.OperationResult',
        {executed_command = []  :: iodata() | undefined, % = 1
         operation_resp         :: {req_obj_path, iodata()} | {req_output_args, usp_record_1_1:'OperateResp.OperationResult.OutputArgs'()} | {cmd_failure, usp_record_1_1:'OperateResp.OperationResult.CommandFailure'()} | undefined % oneof
        }).
-endif.

-ifndef('OPERATERESP.OPERATIONRESULT.COMMANDFAILURE_PB_H').
-define('OPERATERESP.OPERATIONRESULT.COMMANDFAILURE_PB_H', true).
-record('OperateResp.OperationResult.CommandFailure',
        {err_code = 0           :: non_neg_integer() | undefined, % = 1, 32 bits
         err_msg = []           :: iodata() | undefined % = 2
        }).
-endif.

-ifndef('OPERATERESP.OPERATIONRESULT.OUTPUTARGS_PB_H').
-define('OPERATERESP.OPERATIONRESULT.OUTPUTARGS_PB_H', true).
-record('OperateResp.OperationResult.OutputArgs',
        {output_args = []       :: [{iodata(), iodata()}] | undefined % = 1
        }).
-endif.

-ifndef('OPERATERESP_PB_H').
-define('OPERATERESP_PB_H', true).
-record('OperateResp',
        {operation_results = [] :: [usp_record_1_1:'OperateResp.OperationResult'()] | undefined % = 1
        }).
-endif.

-ifndef('NOTIFY.EVENT_PB_H').
-define('NOTIFY.EVENT_PB_H', true).
-record('Notify.Event',
        {obj_path = []          :: iodata() | undefined, % = 1
         event_name = []        :: iodata() | undefined, % = 2
         params = []            :: [{iodata(), iodata()}] | undefined % = 3
        }).
-endif.

-ifndef('NOTIFY.VALUECHANGE_PB_H').
-define('NOTIFY.VALUECHANGE_PB_H', true).
-record('Notify.ValueChange',
        {param_path = []        :: iodata() | undefined, % = 1
         param_value = []       :: iodata() | undefined % = 2
        }).
-endif.

-ifndef('NOTIFY.OBJECTCREATION_PB_H').
-define('NOTIFY.OBJECTCREATION_PB_H', true).
-record('Notify.ObjectCreation',
        {obj_path = []          :: iodata() | undefined, % = 1
         unique_keys = []       :: [{iodata(), iodata()}] | undefined % = 2
        }).
-endif.

-ifndef('NOTIFY.OBJECTDELETION_PB_H').
-define('NOTIFY.OBJECTDELETION_PB_H', true).
-record('Notify.ObjectDeletion',
        {obj_path = []          :: iodata() | undefined % = 1
        }).
-endif.

-ifndef('NOTIFY.OPERATIONCOMPLETE_PB_H').
-define('NOTIFY.OPERATIONCOMPLETE_PB_H', true).
-record('Notify.OperationComplete',
        {obj_path = []          :: iodata() | undefined, % = 1
         command_name = []      :: iodata() | undefined, % = 2
         command_key = []       :: iodata() | undefined, % = 3
         operation_resp         :: {req_output_args, usp_record_1_1:'Notify.OperationComplete.OutputArgs'()} | {cmd_failure, usp_record_1_1:'Notify.OperationComplete.CommandFailure'()} | undefined % oneof
        }).
-endif.

-ifndef('NOTIFY.OPERATIONCOMPLETE.COMMANDFAILURE_PB_H').
-define('NOTIFY.OPERATIONCOMPLETE.COMMANDFAILURE_PB_H', true).
-record('Notify.OperationComplete.CommandFailure',
        {err_code = 0           :: non_neg_integer() | undefined, % = 1, 32 bits
         err_msg = []           :: iodata() | undefined % = 2
        }).
-endif.

-ifndef('NOTIFY.OPERATIONCOMPLETE.OUTPUTARGS_PB_H').
-define('NOTIFY.OPERATIONCOMPLETE.OUTPUTARGS_PB_H', true).
-record('Notify.OperationComplete.OutputArgs',
        {output_args = []       :: [{iodata(), iodata()}] | undefined % = 1
        }).
-endif.

-ifndef('NOTIFY.ONBOARDREQUEST_PB_H').
-define('NOTIFY.ONBOARDREQUEST_PB_H', true).
-record('Notify.OnBoardRequest',
        {oui = []               :: iodata() | undefined, % = 1
         product_class = []     :: iodata() | undefined, % = 2
         serial_number = []     :: iodata() | undefined, % = 3
         agent_supported_protocol_versions = [] :: iodata() | undefined % = 4
        }).
-endif.

-ifndef('NOTIFY_PB_H').
-define('NOTIFY_PB_H', true).
-record('Notify',
        {subscription_id = []   :: iodata() | undefined, % = 1
         send_resp = false      :: boolean() | 0 | 1 | undefined, % = 2
         notification           :: {event, usp_record_1_1:'Notify.Event'()} | {value_change, usp_record_1_1:'Notify.ValueChange'()} | {obj_creation, usp_record_1_1:'Notify.ObjectCreation'()} | {obj_deletion, usp_record_1_1:'Notify.ObjectDeletion'()} | {oper_complete, usp_record_1_1:'Notify.OperationComplete'()} | {on_board_req, usp_record_1_1:'Notify.OnBoardRequest'()} | undefined % oneof
        }).
-endif.

-ifndef('NOTIFYRESP_PB_H').
-define('NOTIFYRESP_PB_H', true).
-record('NotifyResp',
        {subscription_id = []   :: iodata() | undefined % = 1
        }).
-endif.

-ifndef('DOUBLEVALUE_PB_H').
-define('DOUBLEVALUE_PB_H', true).
-record('DoubleValue',
        {value = 0.0            :: float() | integer() | infinity | '-infinity' | nan | undefined % = 1
        }).
-endif.

-ifndef('FLOATVALUE_PB_H').
-define('FLOATVALUE_PB_H', true).
-record('FloatValue',
        {value = 0.0            :: float() | integer() | infinity | '-infinity' | nan | undefined % = 1
        }).
-endif.

-ifndef('INT64VALUE_PB_H').
-define('INT64VALUE_PB_H', true).
-record('Int64Value',
        {value = 0              :: integer() | undefined % = 1, 64 bits
        }).
-endif.

-ifndef('UINT64VALUE_PB_H').
-define('UINT64VALUE_PB_H', true).
-record('UInt64Value',
        {value = 0              :: non_neg_integer() | undefined % = 1, 64 bits
        }).
-endif.

-ifndef('INT32VALUE_PB_H').
-define('INT32VALUE_PB_H', true).
-record('Int32Value',
        {value = 0              :: integer() | undefined % = 1, 32 bits
        }).
-endif.

-ifndef('UINT32VALUE_PB_H').
-define('UINT32VALUE_PB_H', true).
-record('UInt32Value',
        {value = 0              :: non_neg_integer() | undefined % = 1, 32 bits
        }).
-endif.

-ifndef('BOOLVALUE_PB_H').
-define('BOOLVALUE_PB_H', true).
-record('BoolValue',
        {value = false          :: boolean() | 0 | 1 | undefined % = 1
        }).
-endif.

-ifndef('STRINGVALUE_PB_H').
-define('STRINGVALUE_PB_H', true).
-record('StringValue',
        {value = []             :: iodata() | undefined % = 1
        }).
-endif.

-ifndef('BYTESVALUE_PB_H').
-define('BYTESVALUE_PB_H', true).
-record('BytesValue',
        {value = <<>>           :: iodata() | undefined % = 1
        }).
-endif.

-endif.
